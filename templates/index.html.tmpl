<html>
    <head>
        <link rel="apple-touch-icon" sizes="180x180" href="/assets/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon-16x16.png">
        <link rel="manifest" href="/assets/site.webmanifest">
        <link rel="stylesheet" href="/assets/styles.css"> 

        <script type="text/javascript">
            const rangeLocalstorageKey = "range"
            const defaultRange = 123
            var plotName = function(p) {
                return p.id.replace("plot-", "")
            }

            var plotPath = function(p) {
                return "/plot/" + plotName(p)
            }

            var rangeStartDate = function(secs) {
                return new Date(Date.now() - secs*1000);
            }

            var secondsToTimestampString = function (secs) {
                var hours   = Math.floor(secs / 3600);
                var minutes = Math.floor((secs - (hours * 3600)) / 60);
                var seconds = secs - (hours * 3600) - (minutes * 60);

                if (hours   < 10) {hours   = "0"+hours;}
                if (minutes < 10) {minutes = "0"+minutes;}
                if (seconds < 10) {seconds = "0"+seconds;}
                return hours + ':' + minutes + ':' + seconds;
            }

            var rangeOutputText = function(secs) {
                var n = new Date(Date.now())
                return formatDate(rangeStartDate(secs)) + " - " + formatDate(n) + "(" + secondsToTimestampString(secs) + ")"
            }

            var formatDate = function(d) {
                return d.getDate().toString().padStart(2,"0")  + "." + (d.getMonth()+1).toString().padStart(2,"0") + "." + d.getFullYear() + " " +
d.getHours().toString().padStart(2,"0") + ":" + d.getMinutes().toString().padStart(2,"0") + ":" + d.getSeconds().toString().padStart(2,"0") ;
            }


            window.onload = function() {
                var rangeSlider = document.getElementById("rangeSlider");
                rangeSlider.oninput = function() {
                    rangeOutput.innerHTML = rangeOutputText(this.value);
                }

                rangeSlider.onmouseup =function() {                   
                    localStorage.setItem(rangeLocalstorageKey, this.value)

                    location.reload()
                    return false;
                }

                var rangeOutput = document.getElementById("rangeValue");
                var plots = document.querySelectorAll("img.plot")
                var as = document.querySelectorAll("a.plot")


                var sv = localStorage.getItem(rangeLocalstorageKey)
                if (!sv) {
                    localStorage.setItem(rangeLocalstorageKey, defaultRange)
                    sv = defaultRange
                }
                rangeSlider.value = sv
                rangeSlider.oninput()

                for (const p of plots) {
                    r = localStorage.getItem(rangeLocalstorageKey)
                    p.src = plotPath(p) + "?range=" + r || "123"
                }
            }
        </script>
    </head>

    <!-- <p><b>Load Avg:</b> {{ .LoadAvg1 }} / {{ .LoadAvg5 }} / {{ .LoadAvg15 }}</p>
    <p><b>CPU Temp:</b> {{ .CPUTemp }} Â°C</p> -->
    <br>
    {{ range .RaidStats }}
    <p><b>RAID Stats for {{ .Name }}</b></p>
    <p><b>Array State:</b> {{ .ActivityState }}</p>
    <p><b>Disks:</b> {{ .DisksTotal }} total ({{ .DisksActive }} active / {{ .DisksSpare }} spare / {{ .DisksDown }} down / {{ .DisksFailed }} failed)</p>
    <br>
    <hr>
    <br>
    {{ end }}
    <h2>Latest Backups:</h2>
    {{ range $repoName,$backups := .Backups }}
        <h3>{{ $repoName }}</h3>
        {{ if $backups }}
            <ul>
            {{ range $backups }}
                {{ if .Name }}
                <li>{{ .Name }} ({{ .Created }}, {{ fmtDuration .Age }})</li>
                {{ else }}
                <li>loading...</li>
                {{ end }}
            {{ end }}
            </ul>
        {{ else }}
            <p>loading...</p>
        {{ end }}
    {{ end }}

    <br>
    <hr>
    <br>

    
    <div class="slidecontainer">
        <input type="range" min="{{ .RangeSliderMin }}" max="{{ .RangeSliderMax }}" value="300" class="slider" id="rangeSlider">
        <p><span id="rangeValue"></span></p>
      </div>

    <div class="flex-container">
        {{ range $name, $src := .Plots }}
            <img id="plot-{{ $name }}" class="plot" alt="{{ $name }}" src="" />
            
            <br>
            <br>
        {{ end }}
    </div>
</html>